@using System;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Logging;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;
@{
    ViewData["Title"] = "GOOGLE MAPS";
  
}


<!DOCTYPE html>
<html lang="en">




<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <title>My Geocode App</title>
</head>
<body>
    <div class="container">
        <h2 id="text-center">Enter Location: </h2>
        <form id="location-form">
            <input type="text" id="location-input" class="form-control form-control-lg">
            <br>
            <button type="submit" class="btn btn-primary btn-block">Submit</button>
        </form>
        <div class="card-block" id="formatted-address"></div>
        <div class="card-block" id="address-components"></div>
        <div class="card-block" id="geometry"></div>
    </div>



    <script>
        // Call Geocode
        //geocode();

        // Get location form
        var locationForm = document.getElementById('location-form');

        // Listen for submiot
        locationForm.addEventListener('submit', geocode);

        function geocode(e) {
            // Prevent actual submit
            e.preventDefault();

            var location = document.getElementById('location-input').value;

            axios.get('https://maps.googleapis.com/maps/api/geocode/json', {
                params: {
                    address: location,
                    key: 'AIzaSyD_jkhp4b6ISZL3iMvVC6EunX1LLK0qaiA'
                }
            })
                .then(function (response) {
                    // Log full response
                    console.log(response);

                    // Formatted Address
                    var formattedAddress = response.data.results[0].formatted_address;
                    var formattedAddressOutput = `
                                  <ul class="list-group">
                                    <li class="list-group-item">${formattedAddress}</li>
                                  </ul>
                                `;

                    // Address Components
                    var addressComponents = response.data.results[0].address_components;
                    var addressComponentsOutput = '<ul class="list-group">';
                    for (var i = 0; i < addressComponents.length; i++) {
                        addressComponentsOutput += `
                                    <li class="list-group-item"><strong>${addressComponents[i].types[0]}</strong>: ${addressComponents[i].long_name}</li>
                                  `;
                    }
                    addressComponentsOutput += '</ul>';

                    // Geometry
                    var lat = response.data.results[0].geometry.location.lat;
                    var lng = response.data.results[0].geometry.location.lng;
                    map = new google.maps.Map(document.getElementById("map"), {
                        center: { lat, lng },
                        zoom: 8,
                    });
                    var geometryOutput = `
                                  <ul class="list-group">
                                    <li class="list-group-item"><strong>Latitude</strong>: ${lat}</li>
                                    <li class="list-group-item"><strong>Longitude</strong>: ${lng}</li>
                                  </ul>
                                `;

                    // Output to app
                    document.getElementById('formatted-address').innerHTML = formattedAddressOutput;
                    document.getElementById('address-components').innerHTML = addressComponentsOutput;
                    document.getElementById('geometry').innerHTML = geometryOutput;
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    </script>
</body>
</html>

<html>
<head>
    <title>Simple Map</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <link rel="stylesheet" type="text/css" href="./style.css" />
    <script src="./index.js"></script>
</head>
<body>
    <div id="map"></div>
    <script>
        let map;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat:12 , lng:12  },
                zoom: 8,
            });
        }
    </script>
    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD_jkhp4b6ISZL3iMvVC6EunX1LLK0qaiA&callback=initMap&v=weekly"
            async></script>
</body>

<style>
    #map {
        height: 400px;
        width: 600px;
    }
</style>



</html>


